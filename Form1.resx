<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEACABoBQAAJgAAACAgAAABAAgAqAgAAI4FAAAoAAAAEAAAACAAAAABAAgAAAAAAAAB
        AAB0EgAAdBIAAAABAAAAAQAA+/v7APX19QDo6OgA5OTkAPPz8wDu7u4AtLS0AKGhoQCvr68At7e3AKen
        pwCqqqoA4eHhANLS0gCurq4AdHR0AHFxcQDd3d0A29vbAIuLiwBLS0sATExMANjY2ADT09MA+fn5AL+/
        vwDFxcUAwsDCANTU0wDIyMgAxMPDAMzMzACWlpYAenl5ALi4uQCSkpIAe3x7AJycnACampoAtLOzAKuq
        qwCGhoYAgYGBAH9/fgB3eHcAiIiIAKOjowCrq6sA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAMREQwREREREQMEAAAAAg4KCAYGBgYGBgYKDgIABAsIAwIM
        HxwfERwNAwYvBBEHAhgGByYtKSMTIAMFLhIXDgECKSogKywpLRMWAQ4NHAgEBBkODgYoIgkfGAQOHBwO
        BQAWJSYnGyIKHAAFDhwcDgUAHSMkDhoZCBsYBA4cHA4FAB0gIQgfHSIbGAQOHBwOBQAfICEOIgYIGhgF
        DhwcDgUAHQoHGh4ZBhoYBQ4cFw4EGBkGGgYbDQYZGAQOFxEHAwASDhMUFRMOFgADBxEECAsMBQ0ODxAO
        DQIMDg4EAAUGBwgGBggICQYICgYFAAAAAQIDAgIEBAICAwIBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAAAACAAAABAAAAAAQAIAAAA
        AAAABAAAdBIAAHQSAAAAAQAAAAEAAPv7+wD9/f0A8fLxAOXl5QDd3d0A2traANfX1wDg4OAA09LTALe4
        twCrqqsAqKenALOzswC7ursA7+/vAJubmwCjo6MAn5+gAM3NzQCgn6AAw8PDAMXFxQCHiIcAsK+wAHd4
        dwBbW1sA/Pz8AMrKygCTk5MAUVFRADU1NQBNTU0A9fX1AIODgwBjZGMAaWlpAOrq6gCvsLAAt7i4AMjH
        yADz8/MAmJeXAIeIiACwr68Ai4qLAHx8fAC/v8AAzMvMAOjo5wDHx8gAxMPEAMC+wADAvr8AqKeoALi3
        uADo5+cAuLi3AJiXmACYmJcAdHR0AMfIyADQz9AA6+vrAP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEBAQEBASACAgICAgICAgICAgICAiABAQEBAQEBAAAB
        AQEOBwUGCAgICAYGCAgGBggICAgGCAgGBA4BAQEaAQEBDhsKCwsKCgoKDAwMDAwMCgoKDAwKCgsKGw4B
        AQEBACQSCg8QCgwNDQkMCQk2CQkNDQkJCQwKEA8KGyQAAQEOFQoQDBIEBAcDBBISBQUICAQHBQg9BgQI
        CRAKFT4BAQQKDwwFIAECJCQHEhsICCcbBgQGEhsFAiAECQ8KBAEgCBAQEiABIAYNDQ0KEA8PHBwQCwsP
        DwkFICASEBAIIA4bCwoHAQEHCiwqHCwWLTs7OxgtIS0tHA0OAQcKEBsOJBsLDAMBAQYPGBgWHCwtOzsY
        GC0hLS0cDSQBAwkLPCQDGwoJBwEBBhAWFhwPDxwsFiocOQ8POgoSDgEDCQobAwMbCgkHAQEEDQoKCgsK
        CgoPDwoJCQw4GwMAAQcJChsDJBsKCQcBASQGFQkKNQoNDQwMMxQ2DRsHAAEBBwwKGzckGwoJBwEBIAMb
        Cg8PNQwNDTMUCQsKGyQBAQEHDAobMCQbCgwHAQEAAxUQLCwPCwkNFDQXEwszBwABAQcMChswJBsKDAcB
        ASAEDRAqLSoQDTMzMw0KCg0GAgEBBwwKGyQkGwoMBwEBAgYNCyoYLRANMjIVFA0JDRIOAQEHDAobJDAb
        CgwHAQECBg0LKhgtEBQbLxIxDQkNEg4BAQcMCxsDJBsKDAcBAQIGDQssGC0QFBsbLxUNCQ0IAgEBBwwK
        GwMkGwoMBwEBIAUNCyoYIRANDQ0uDQkMDQgCAQEHDAobJCQbCgwHAQEgBQ0LLC0WCw0JDAwMDAwNCAIB
        AQcMChskJBsKDAcBASgGDQopKhwrDQkKDAwMDA0IAgEBBwwKGyQDGwoMBwEBAggNDAoKCRUSGycbFQ0J
        DQgOAQEHDAoVAwMbCgwHAQEOEg0JFBIIEhIGBAcFJwkJEg4BAQcMCxUDJBsLDAMBAQIICSUmFA0LDxAJ
        FRUNDAkSAgEBAyULFSQCGxAKBwEBIAUNChEPISIdHSMWDxAKDQUgAQEHChAbAgAIEA8bDgEBAgUNChwY
        HR4eHxgcCg0GDgEBDhsPEAgAAQcXDwoSDgEBAgQSDQ8YGRkYDw0SBAIaAQ4SCg8KBAEBDhIKEwoUBQQE
        BhIVDA8WFg8MFRIGBAQFFQoQChIOAQEADggMDw8LCgwMDAwKEA8PEAoMDAwMCgoRDwwIDgABAQEBAggJ
        CgsKCgwJCQ0NDQ0NDQkJDAoKCwoJCAIBAQEAAQEBAgMEBQYFBQQEBAcDBwcEBAUFBQYFBAMCAQEBAAAA
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>